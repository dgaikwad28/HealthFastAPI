#version: "3.9"
#services:
#  db:
#    image: postgres
#    restart: unless-stopped
#    environment:
#      - POSTGRES_DB=health_tech_db_dev
#      - POSTGRES_USER=health_tech_user_dev
#      - POSTGRES_PASSWORD=Password!#
#    ports:
#      - 5432:5432
#    expose:
#      - "5432"
#    volumes:
#      - ./db-data:/var/lib/postgresql/data:cached
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -U health_tech_user_dev -d health_tech_db_dev -h localhost -p 5432" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#
#
#  health_tech:
#    image: health_tech:test
#    container_name: health_tech
#    build:
#      context: .
#      dockerfile: Dockerfile
#    ports:
#      - "8000:8000"
#    volumes:
#      # env folder is mounted as manage.py, wsgi.py and celery.py has the .env hard coded.
#      # This can be overcome if used environ package to fetch .env file.
#      - ./env:/app/health_tech/env
#    depends_on:
#      db:
#        condition: service_healthy

version: '3.9'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - .:/app/health_tech
      - ./env:/app/health_tech/env
    environment:
      - UVICORN_WORKERS=4
      - DB_USERNAME=health_tech_user_dev
      - DB_PASSWORD=Password!
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=health_tech_db_dev
    depends_on:
      - db
  db:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: health_tech_user_dev
      POSTGRES_PASSWORD: Password!
      POSTGRES_DB: health_tech_db_dev

volumes:
  postgres_data:
    external: false
